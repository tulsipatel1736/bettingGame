import sys
import warnings
from random import randint, seed, uniform
import math

# WARNING!  Do not edit this file!
# If modify this file then it might not catch errors in your project code.

# run this file with
# python test_problemSolving_probability.py

# it will not work with pytest


# Keep track of modules that project uses so we can warn if there are any unsupported imports
modules_before = set(sys.modules.keys())
import problemSolvingProbability as P
modules_after = set(sys.modules.keys())


def playBetGame():

    games = 2000
    handsPerGame = 20
    numCards = 10
    maxOdds = 3
    minOdds = 1
    seed(1254658)   # <--------------------- change the seed here

    winnings = -1.0 * handsPerGame * games  # stake is $1 per hand
    for i in range(games):
        numBlackCards = randint(0, numCards)    # new deck for each hand
        state = None       # state variable for the betting function
        outcome = None     # we need to remember what the previous outcome was to pass to the betting function
        
        for h in range(handsPerGame):
            # choose the odds uniformly at random
            odds = { 'black': uniform(minOdds, maxOdds), 'red': uniform(minOdds, maxOdds) }
            
            bet, state = P.makeBet(odds['black'], odds['red'], outcome, state)

            # choose a card uniformly at random
            outcome = 'black' if randint(1, numCards) <= numBlackCards else 'red'
            
            # pay out if they won
            if bet == outcome:
                winnings += odds[outcome]
    
    return winnings / games

def testVersionOK():
   if sys.version_info[0] != 3:
      warnings.warn("You are using Python version 2.  You need to use Python version 3.9 or higher.")
      sys.exit()
   minor = sys.version_info[1]
   if minor < 9:
      warnings.warn(f"You are using Python version 3.{minor}.  Use Python version 3.9 or higher.")
   
   if minor > 10:
      warnings.warn(f"You are using Python version 3.{minor}.  The marking environment uses Python version 3.10.  Be careful not to use language features from later versions.")

def testModulesOK():
   allowed_modules = { 'probability','digraphs', 'csv', 'graphs', 'collections', 're', 'numpy', 'problemSolvingProbability', 'typing',  'pickle', 'cython_runtime', 'hashlib', 'hmac', 'secrets', 'ctypes' }
   usedModules = modules_after - modules_before
   problemModules = { m for m in usedModules if m[0] != '_' and m.split('.')[0] not in allowed_modules }
   if problemModules:
      warnings.warn(f"You have imported one or more modules which are not on the list of pre-approved modules.  Please check that it is needed and gain approval from the unit coordinator.  In some cases these may be imported by another module, eg. numpy, in which case there is no problem.\nImported modules: {problemModules}")
      

if __name__ == "__main__":      
    testVersionOK()
    testModulesOK()
    r = playBetGame()
    print(f'Average return is {r}')
    print(f'Total {min(15, math.ceil(1.5 * r))} marks')
    print(f'Please note that the marks is an estimate as the tester will use a different seed.  It is recommended that you run with multiple seeds for testing.  The seed is chosen by modifying the seed(1) statement on line 28.')
    print(f'Python version {sys.version}')

